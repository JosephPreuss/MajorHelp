<<<<<<< HEAD
Hello World!
=======
I was busy when most of my team did their individual projects so in order to be complete with my individual work I am going to set up a merge conflict on my own.

I have created two branches, each with a file called 'a'.

in branch one, it just contains "Hello World!", in branch two, it contains what you see now.


Technically, all you need to do is resolve a merge conflict, doesn't matter if you start one yourself (most of the time I only get merge conflicts by myself anyway!)


I will then merge these branches.


After a bit, I will archive all related branches.
https://stackoverflow.com/questions/1307114/how-can-i-archive-git-branches


-Joseph
>>>>>>> jpreusspull2



I "resolved" the merge conflict. Technically. Normally I would go in here and pick and choose which lines to remove, which to keep, and which to modify. (Or I could let VSCodium do it for me!) but for archival purposes I will just run 'git add a' to mark the merge conflict as resolved. This is still technically a linux style text document so git should be able to treat it as a normal file from now on, however something like vscode (or maybe even github!) may see it as a still ongoing conflict (in the case of the latter I will probably have to add some sort of comment character to stop it recognizing it as such).
